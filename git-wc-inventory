#!/bin/bash

# git-wc-inventory
#
# Recursive find of git repos.  Produce an 'inventory' report
# showing wc status, remotes, etc.
#
#  Options:
#  --interactive:
#      Open interactive shell for each working tree
#
#  --wcfile [path-to-file]
#      List of working copy paths to eval
#
#  --wcfile-only
#      Genrate working-copy listing, but no report or interaction
#

interactive=false
wcfile_only=false

die() {
    echo "ERROR: $*" >&2
    exit 1
}

make_wc_listing() {
    local rootdir="$1"
    (
        cd "$rootdir" || die "Bad root dir $rootdir"
        find . -type d -name '.git'  | sed -e 's^/.git$^^' -e 's%^./%%'
    )
}


eval_single_wc() {
    local wc_dir="$1"
    echo
    echo
    cd "${wc_dir}" || die "Can't cd to ${wc_dir}"
    echo -e "wc-found>>>\t${wc_dir}\t$PWD"
    git remote -v 2>&1 | sed 's/^/    /'
    git branch -a 2>&1 | sed 's/^/    /'
    git status 2>&1 | sed 's/^/ :::: /'
    if $interactive && [[ ! -f .git/done ]]; then
        echo
        echo " << git-inventory subshell: >>  "
        echo "  - exit 0 to leave current shell"
        echo "  - exit 1 to terminate inventory"
        echo "  - touch .git/done to mark complete"
        echo

        Ps1Tail=git-inventory bash || exit 1
    fi
}


do_inventory() {
    # Create a wc listfile and then run
    local top_dir="${1:-$PWD}"
    (
        [[ -n $wcfile ]] && wc_listfile=$wcfile || wc_listfile=/tmp/git-inventory-$$
        cd "$top_dir" || die "Can't cd to $top_dir"
        echo -e "do_inventory>>\t$PWD"
        make_wc_listing "$top_dir" | tee $wc_listfile
        echo "Project list in $wc_listfile" >&2
        $wcfile_only && exit 0
        set -- $( cat "$wc_listfile" )
        for gitpath; do
            (
                eval_single_wc "$gitpath" || exit 1
            ) || die "Quit at $PWD"

        done
    )
}


if [[ -z $sourceMe ]]; then
    while [[ -n $1 ]]; do
        if [[ "$1" == "--interactive" ]]; then
            interactive=true
        elif [[ $1 == "--wcfile" ]]; then
            export wcfile="$2"
            shift
        elif [[ $1 == "--wcfile-only" ]]; then
            wcfile_only=true
        fi
        shift
    done
    do_inventory "$@"
fi


