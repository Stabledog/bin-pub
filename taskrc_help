#!/bin/bash
# taskrc_help
# See taskrc_loader

#set -x

function print_builtin_help {
    (
        echo "Built-in options:"
        echo "  -s, --search-up:  find taskrc by searching parent dir chain"
        echo "  -r, --refresh:    reload most recent taskrc"
        echo "  -d, --dump:       dump most recent taskrc"
        echo "  -i, --info:       print path of most recent taskrc"
        echo "  -n, --new:        create new taskrc in current dir"
        echo "  -e, --edit:       edit, then reload current taskrc"
        echo ""
        echo "Other built-ins:"
        echo "  cd_t{askrc}:  cd to most recent taskrc dir"
        echo "  \$taskrc_dir: directory of most recent taskrc"
        echo "  taskrc.sh [func-name] [...args]: invoke your functions from shell script."
        echo "  #Help:  Use #Help tokens in your taskrc files to customize --help contents."
        echo ""
    )  
}


function print_ext_help {
    local xp="$1" # path to the taskrc file

    # If there's at least one #Help token in the file, we'll assume it's well-marked and follow
    # rules accordingly.  Otherwise, we'll dump the whole file after stripping common noise.
    #
    local has_helptags=false
    egrep -q '#Help' ${xp} 2>/dev/null && has_helptags=true

    if $has_helptags; then
        # We extract all lines marked #Help, plus one line immediately prior to such blocks.  We swap
        # out the #Help tag with a plain hash (#)
        echo "Help (from ${xp}):"
        echo "-----------------"
        egrep -B 1 '#Help' ${xp} | sed 's/#Help/#/' | sed 's/^/  /'
    else
        egrep -v '^$' ${xp}
        echo " >> done generic help: [${xp}]"
    fi
}

print_builtin_help

if [[ -r ${taskrc_dir}/taskrc ]]; then

    print_ext_help ${taskrc_dir}/taskrc
else
    echo "[There's no active taskrc to print help for.]"
fi

