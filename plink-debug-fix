#!/bin/bash

# plink-debug-fix

#  This script zaps a plink makefile to enable symbols, disable optimization, and turn on debug info
#


function usage {
    echo "usage: plink-debug-fix [makefile [makefile...]]"
}

function errExitt {
    echo "ERROR: $*" >&2
    exit 1
}

function printFilterOptimize {
    echo '# Added by plink-debug-fix:'
    echo 'CFLAGS:=$(filter-out -x01,$(CFLAGS)) -O0 -g'
    echo 'CPPFLAGS:=$(filter-out -x01,$(CPPFLAGS)) -O0 -g'
}

function zapMakefile {
    local makefile=$1
    if /bin/egrep -q 'plink-debug-fix' $makefile; then
        echo "File $makefile is already configured for debugging" >&2
        false
        return
    fi
    cp $makefile $makefile.bak
    cat $makefile.bak | sed  '/^.*WARNINGS_CLEAN.*/a #\n# Added by plink-debug-fix:\nIS_DEBUG = yes\nIS_OPTIMIZED=' > $makefile.tmp

    printFilterOptimize >> $makefile.tmp

    mv $makefile.tmp $makefile

    echo "Modified $makefile to support debugging"
}

if [[ -z $sourceMe ]]; then
    if [[ -z $1 ]]; then usage; exit 1; fi 

    while [[ ! -z $1 ]]; do
        [[ -f $1 ]] || errExit "Can't find makefile $1"
        zapMakefile $1
        shift
    done
fi


