#!/bin/bash
# git-protocol-select  [$protocol_id]
#
#  - If no $protocol_id is offered, we will print a line for each remote associated
#       with the current HEAD:
#       git mine git@github.com/...
#       https yours https://weasel@github.com...
#
#  - If a $protocol is offered, it should match one of [git, https,...] and only the
#       first matching entry will be printed.
#
#
#  Background:  This stackoverflow post is good to understand:
#   it covers the clean way to parse through the branch+remote configuration
#  to get what we need.
# https://stackoverflow.com/a/7251377/237059

function enum_remotes_for_HEAD {
    # What remotes are defined for the current repo?
    git remote -v | awk '{print $1}' | sort -u
}

function url_for_remote {
    # Given a remote name, what's the url?  Prints
    # tuple of [protocol_id] [remote-name] [url]
    local url=$(git config remote.${1}.url)
    local protocol_id=$(echo $url | tr '@:' " " | awk '{print $1}')
    echo "$protocol_id $1 $url"
}

if [[ -z $sourceMe ]]; then
    match_protocol_id=$1
    for remote in $(enum_remotes_for_HEAD); do
        if [[ -z $match_protocol_id ]]; then
            url_for_remote $remote 
        else
            url_for_remote $remote | egrep "^${match_protocol_id}"
        fi
    done
fi


