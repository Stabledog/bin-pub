#!/bin/bash


function errExit {
    echo "ERROR: $*" >&2
    exit 1
}

function gitstatus {
    # Return 0 if nothing dirty
    local quiet=false
    [[ $1 == "-q" ]] && quiet=true
    local files=$($GIT status -s 2>/dev/null | cut -c 3-)
    if [[ -z $files ]]; then
        true  # return true if nothing dirty
        return
    fi
    if ! $quiet ; then
        echo "$files"
    fi
    false
}

function commitLocals {
    if ! gitstatus ; then
        echo "Dirty in $PWD. Auto-committing..."
        $GIT add .
        $GIT commit -m "Commit by gitsync" || errExit "Auto-commit failed in $PWD"
        
        gitstatus -q || errExit "Still dirty in $PWD after auto- commit!" 
    fi
}

if [[ -z $sourceMe ]]; then
    set -ue
    [[ -f ~/.gitsync-config ]] || errExit "Can't find ~/.gitsync-config"

    while read dir options; do
        eval "dir=$dir"
        if [[ -d $dir ]]; then 
            cd $dir
            if [[ $options == unsafe ]]; then
                GIT="git -c http.sslVerify=false "
            else
                GIT="git"
            fi
            echo "Sync: $dir"
            $GIT pull || errExit "Pull failed on $dir"
            commitLocals 
            $GIT push || errExit "Push failed on $dir"

        else
            echo "gitsync: [$dir] not found, skipping."
        fi
        echo "gitsync done"
    done < <(source ~/.gitsync-config)
fi


