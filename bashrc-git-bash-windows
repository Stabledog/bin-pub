# bashrc-git-bash-windows tries to bring some order to the git bash env
#
# There's a lot of stuff that doesn't work in git bash.  But it gets along OK
# with RDE and git projects.

function errExit {
    echo "ERROR: $@">&2
    exit 1
}

alias lr='ls -lirt'
alias ll='ls -la'

alias gc='git commit'
alias ga='git add'
alias gs='git status'

function gpa {
   git commit -am sync
   git push || return 1;
}


export RdeHome="/c/blp/Rde Projects/BBGitHub"


set -o vi

alias python='winpty python'
alias python3.7='winpty python3.7'

function to {
    # Very limited version of 'to' command
    if [[ $1 == "cyg" ]]; then
        cd $CygHome
    elif [[ $2 == "rde" ]]; then
        cd "$RdeHome"
    elif [[ $1 == "bin" ]]; then
        cd ${CygHome}/bin
    fi
}

PATH=$PATH:~/bin:$HOME/bin:$HOME/AppData/Local/npm
PATH=$(~/bin/pathdelete $HOME/AppData/Local/Microsoft/WindowsApps)


source ~/bin/taskrc_loader
alias taskrc=taskrc_v2

function loadTaskrcs {
	function load_rcs1 {
	    eval "$xlocal rootDir=$1"
        /bin/ls -1 ${rootDir}/.taskrc/* 2>/dev/null | egrep -v '\.vim$' | sort
    }

	# Load everything in $HOME/.taskrc, sorting alpha.  Most
	# of these should be symlinks.
	while read line; do
		if [[ -f $line ]]; then 
            source $line
        fi
    done < <( load_rcs1 "$HOME" )

	# Do it for any local .taskrc's in current dir also:
	if [[ "$HOME" != "$PWD" ]]; then
        while read line; do
            if [[ -f $line ]]; then 
                source $line
            fi
        done < <( load_rcs1 "$PWD" )
    fi
}

# Mildly cleaner taskrc.  If there's a .taskrc directory in HOME,
# just source everything found there.
if [[ -d $HOME/.taskrc ]] ; then
	loadTaskrcs
fi


