#!/bin/bash


CYGWIN=false
if [[ -n "$ZSH_VERSION" ]]; then
	inZsh=true
	eval "function shopt {
		local doNothing
		# turn shopt into nothingness in zsh
	}"
else
	inZsh=false
fi

[[ -f /Cygwin.bat ]] && CYGWIN=true



# If not running interactively, don't do anything
if [[ ! -t 0 ]]; then
	return
fi
#[[ "$-" != *i* ]] && return


umask 0022
IGNOREEOF="3"   # Don't close interactive shell for ^D

function pathadd () {
    if ! echo $PATH | /bin/egrep -q "(^|:)$1($|:)" ; then
       if [ "$2" = "after" ] ; then
          PATH=$PATH:$1
       else
          PATH=$1:$PATH
       fi
    fi
}


# Write a note to the bash history.  -l means 'list histNotes'.
function histNote {
	if [[ "$1" == "-l" ]]; then
		history | egrep -A 2 '#--histNote'
	else
		history -s "#--histNote------------H-I-S-T-N-O-T-E--$(date):"
		history -s "cd $PWD"
		history -s "$@"
		history -s "# . . ."
	fi
}

function histrc {
	# don't put duplicate lines in the history. See bash(1) for more options
	# ... or force ignoredups and ignorespace
	HISTCONTROL=ignoredups:ignorespace


	# append to the history file, don't overwrite it
	shopt -s histappend
	shopt -s histverify # Load history events for editing rather than immediate execution
	# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
	HISTSIZE=10000
	HISTFILESIZE=20000
	PROMPT_COMMAND='history -n'

	alias hist='history '
	alias hn='histNote '
	alias hl='histNote -l'

}

histrc

DEBEMAIL="les.matheson@gmail.com"
DEBFULLNAME="Les Matheson"

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

function ls_aliases {
	# some more ls aliases
	alias ll='ls -alF'
	alias la='ls -A'
	alias l='ls -CF'
	alias lr='ls -lirt'
}

ls_aliases

[[ -f ~/bin/bash_aliases ]] && source ~/bin/bash_aliases

if $CYGWIN; then
	source ~/bin/cyg/cyg-utils
	alias sudo="$@"
fi

if ! $inZsh; then
	if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
		. /etc/bash_completion
	fi
fi

export XEDITOR=$(which gvim)
export EDITOR=$(which vim)

# disable flow control for terminal:
stty -ixon -ixoff

function raverc_stuff {
	[[ -f ~/.raverc/raverc ]] && { source ~/.raverc/raverc; addpath ~/.raverc; }

	#export SVNDIFF_COMPARETOOL="gvimdiff -f"

	# Added by svnkit installer:
	[[ -f ~/.svnkit ]] &&  source ~/.svnkit
	# Added by rmake-update: 
	[[ -f /opt/devel/rbin/rave.rc ]] && source /opt/devel/rbin/rave.rc
}

#raverc_stuff

[[ -f ~/bin/ssh_aliases ]] && source ~/bin/ssh_aliases

if $CYGWIN; then
    export DISPLAY=:0
	PATH=$HOME/bin/cyg:$PATH
fi

if [[ -d ${HOME}/binl ]]; then
	export PATH="${HOME}/binl:${PATH}"
fi


if [[ "$(hostname)" == "boomerang" ]]; then


	#export nwoRoot=$HOME/nwo_tools
	#source $HOME/nwo_tools/bin/nwo_tools.rc
	export PERL_LOCAL_LIB_ROOT="/home/lmatheson/perl5";
	export PERL_MB_OPT="--install_base /home/lmatheson/perl5";
	export PERL_MM_OPT="INSTALL_BASE=/home/lmatheson/perl5";
	export PERL5LIB="/home/lmatheson/perl5/lib/perl5/i686-linux-gnu-thread-multi-64int:/home/lmatheson/perl5/lib/perl5";
	export JAVA_HOME="/usr"
	export EC2_HOME="/opt/aws/ec2-api-tools-1.6.7.3"
	export AWS_ACCESS_KEY="AKIAJWOOYKPDF5QXBPUA"
	export AWS_SECRET_KEY="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"
	export EC2_URL=https://ec2.us-west-2.amazonaws.com
	#export EC2_DEFAULT_ARGS="--aws-access-key=$AWS_ACCESS_KEY -- aws-secret-key=$AWS_SECRET_KEY "
	export PATH="/home/lmatheson/perl5/bin:/opt/cxoffice/bin:$HOME/binl:$PATH:$EC2_HOME/bin"
	source ~/.Xmodmap
	# If network-manager isn't running, start it:
	nmRunning="$(sudo status network-manager | grep 'running')"
	if [[ -z $nmRunning  ]]; then
		echo "Starting network-manager:"
		sudo start network-manager
	fi
	~/binl/xpbox-control start  # Start Virtual Box to run the XpBox vm
	alias kbfix='source /home/lmatheson/.Xmodmap'
fi

# xclip should use the X clipboard, oddly enough:
alias xclip='xclip -se c'



if [[ -f ~/bin/rbuzz_rcd ]]; then
	function tox {
		newDir="$($HOME/bin/rbuzz_rcd $@)"
		if [[ ! -z "$newDir" ]]; then
			pushd $newDir >/dev/null
		fi
	}
else
	function tox {
		echo "This function only works if ~/bin/rbuzz_rcd is present."
	}
fi


if [[ -f $HOME/binl/.cache-funcs ]]; then
	source $HOME/binl/.cache-funcs
fi

if [[ -f $HOME/binl/mediacracy-funcs ]]; then
	source $HOME/binl/mediacracy-funcs
fi

if  which taskrc-shell &>/dev/null ; then
	source $(which taskrc-shell)
fi

# For transient or uncontrolled shell-startup stuff:
if [[ -f ${HOME}/.bashrc-ext ]]; then
	source ${HOME}/.bashrc-ext
fi

