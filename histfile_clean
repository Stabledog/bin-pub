#!/bin/bash
# Cleaning a history file is mainly about removing lines
# that are too short to be worth preserving long-term

die() {
    echo "ERROR: $@" >&2
    exit 1
}

print_clean_history() {
    local timestamp=""
    while read line; do
        [[ -z $line ]] && continue
        [[ $line == '#'* ]] && { timestamp="$line"; continue; }

        # Should we keep this line?
        if (( ${#line} < 8 )); then
            continue
        fi
        [[ -n $timestamp ]] && echo "$timestamp"
        echo "$line"
        timestamp=""
    done
}

do_clean_history() {
    local tmp_out=$(mktemp)
    [[ -f $tmp_out ]] || die failed creating tmp file
    print_clean_history < $1 > $tmp_out
    #cat "$tmp_out"
    local rpath=$(readlink -f $1)
    cat $tmp_out > $rpath
    rm $tmp_out
}

if [[ -z $sourceMe ]]; then
    [[ -z $1 ]] && die "Expected path to history file as \$1"
    [[ -e $1 ]] || die "Can't find history file $1"
    do_clean_history $1
fi
